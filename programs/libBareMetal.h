// This file was automatically generated by http://www.hwaci.com/sw/mkhdr/
// =============================================================================
// BareMetal -- a 64-bit OS written in Assembly for x86-64 systems
// Copyright (C) 2008-2014 Return Infinity -- see LICENSE.TXT
//
// The BareMetal OS C/C++ library header.
//
// Version 3.0 for BareMetal OS v1.0.0
//
// This allows for a C/C++ program to access OS functions available in BareMetal OS
// =============================================================================
#ifndef _LIBBAREMETAL_H
#define _LIBBAREMETAL_H 1

// Misc
void b_system_misc(unsigned long function,void *var1,void *var2);
unsigned long b_system_config(unsigned long function,unsigned long var);

// Disc
unsigned long b_disk_write(unsigned long start,unsigned long num,unsigned long disknum,void *source);
unsigned long b_disk_read(unsigned long start,unsigned long num,unsigned long disknum,void *dest);

// Network 
unsigned long b_ethernet_rx(void *mem,unsigned long iid);
void b_ethernet_tx(void *mem,unsigned long len,unsigned long iid);
unsigned long b_mem_release(unsigned long *mem,unsigned long nbr);
unsigned long b_mem_allocate(unsigned long *mem,unsigned long nbr);

// SMP
void b_smp_wait(void);
void b_smp_run(unsigned long ptr,unsigned long var);
unsigned long b_smp_dequeue(unsigned long *var);
unsigned long b_smp_enqueue(void *ptr,unsigned long var);

// Input
unsigned char b_input_key(void);
unsigned long b_input(unsigned char *str,unsigned long nbr);

// Output
void b_output_chars(const char *str,unsigned long nbr);
void b_output(const char *str);

// Index for b_system_config calls
#define timecounter 0
#define config_argc 1
#define config_argv 2
#define networkcallback_get 3
#define networkcallback_set 4
#define clockcallback_get 5
#define clockcallback_set 6
#define statusbar 10

// Index for b_system_misc calls
#define smp_get_id 1
#define smp_lock 2
#define smp_unlock 3
#define debug_dump_mem 4
#define debug_dump_rax 5
#define get_argc 6
#define get_argv 7

#endif
// =============================================================================
// EOF
